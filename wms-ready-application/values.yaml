# Name of application
name: wms-ready-application # Name of application
localDevelopment: false
webapp:
  image: eccr.ecmwf.int/c3s-applications/wms-ready-application-webapp  # image for application
  tag: latest # image tag to use (this )
  port: 80  # Port exposed by the application
  replicas: 1
apiServer:
  image: eccr.ecmwf.int/c3s-applications/wms-ready-application-server  # image for application
  tag: latest  # image tag to use (this )
  port: 5000 # Port exposed by the application
  replicas: 1
  startupCommand: "make start-server API_HOST=0.0.0.0 ROOT_PATH=$ROOT_PATH"
  env:
    wmsServer: https://apps.copernicus-climate.eu/c3s-apps/wms-ready-application/wms
    rootPath: /c3s-apps/wms-ready-application/api
    mode: production
wms:
  image: ecmwf/skinnywms  # image for application
  tag: 0.10.0  # image tag to use (this )
  port: 5000  # Port exposed by the application
  replicas: 1
  env:
    skinnywmsUwsgiWorkers: $(SKINNYWMS_UWSGI_WORKERS:-4)
commonWms:
  env:
    wmsDataDir: /skinnywms/appdata
    wmsStyleDir: /skinnywms/styles
# sharedPvc:
#   name: wms-data-volume
#   pvName: pv-wms
#   nfsServerUrl: nfs-server.nfs-server.svc.cluster.local
#   storage: 10Gi
#   storageclass: nfs-csi
#   path: /skinnywms
# Values used for ingress control
ingress:
  enable: true
  # Hostname where the app will be published, this must be mapped to the cluster described by the KUBECONFIG
  hostname: apps.copernicus-climate.eu  
  # Path to the application, this must be included in the env when building a JS application
  webappPath: /c3s-apps/wms-ready-application/
  apiPath: /c3s-apps/wms-ready-application/api/
  wmsPath: /c3s-apps/wms-ready-application/wms/
  # SSL certificate secret name:
  secretName: cert-manager-c3s-cert
  ingressclass: your-ingress-class

# set certManagerCertificateRequest to "true" and certManager parameters to use cert-manager and acme challenge
# certManagerCertificateRequest: false
# certManager:
#   clusterIssuer: letsencrypt-c3s # Cluster issuer to use for SSL certificates
#   issueTemporaryCertificate: false # Set to true to issue a temporary certificate
#   acme: true # Set to true to use ACME for certificate issuance
#   disableSslRedirect: false # Set to true to disable SSL redirect